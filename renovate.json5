// SPDX-FileCopyrightText: 2024 Jonas Fierlings <fnoegip@gmail.com>
//
// SPDX-License-Identifier: 0BSD
{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:best-practices",
    ":configMigration",
    ":maintainLockFilesWeekly",
    ":dependencyDashboard",
    ":rebaseStalePrs",
    ":semanticCommits",
    ":semanticCommitScope(deps)",
    "customManagers:dockerfileVersions",
    "helpers:pinGitHubActionDigests"
  ],
  "assignees": [
    "PigeonF"
  ],
  "commitBodyTable": true,
  "packageRules": [
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "ghcr.io/pigeonf/containers/*"
      ],
      "pinDigests": false
    },
    {
      "groupName": "Readme references",
      "matchFileNames": [
        "README.md"
      ]
    },
    {
      "groupName": "buildkit images",
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "docker.io/moby/buildkit"
      ]
    },
    {
      // Digests for base images are deliberately not pinned in Dockerfile (pinning happens in
      // docker-bake.hcl).
      "description": "Do not pin in rust.Dockerfile",
      "matchDatasources": [
        "docker"
      ],
      "matchFileNames": [
        "docker/rust.Dockerfile"
      ],
      "pinDigests": false
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "description": "Update variables in docker bake files",
      "fileMatch": [
        "^docker-bake\\.hcl$"
      ],
      "datasourceTemplate": "docker",
      "matchStrings": [
        "# renovate:(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s+name\\s*=\\s*[\"'](?<depName>.+?)[\"']\\s+tag\\s*=\\s*[\"'](?<currentValue>.+?)[\"']\\s+digest\\s*=\\s*[\"'](?<currentDigest>.*?)[\"']\\s",
        "\\s*default\\s?=\\s?\"(?<currentDigest>.+?)\" # renovate: currentValue=(?<currentValue>.+?) datasource=(?<datasource>.+?) depName=(?<depName>.+?)(?: (?:packageName|lookupName)=(?<packageName>.+?))?(?: versioning=(?<versioning>.+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\s",
        "# renovate: datasource=(?<datasource>.+?) depName=(?<depName>[^\\s]+?)(?: (?:lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\s+tag\\s*=\\s*[\"'](?<currentValue>.+?)[\"']\\s(?:\\s*digest\\s*=\\s*[\"'](?<currentDigest>.+?)[\"']\\s)?"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml$",
        "(^|/)action\\.ya?ml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\s]+?)(?: (?:lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\s+version\\s*:\\s*[\"']?(?<currentValue>.+?)[\"']?\\s(?:\\s+revision\\s*:\\s*[\"']?(?<currentDigest>.+?)[\"']?\\s)?"
      ]
    },
    {
      "customType": "regex",
      "description": "Update container image versions in readme",
      "fileMatch": [
        "^README.md$"
      ],
      "matchStrings": [
        "`(?<depName>ghcr.io/pigeonf/containers/[^\\s]+?):(?<currentValue>[^\\s]+?)`"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "docker"
    }
  ]
}
