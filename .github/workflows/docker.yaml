# SPDX-FileCopyrightText: 2024 Jonas Fierlings <fnoegip@gmail.com>
#
# SPDX-License-Identifier: Unlicense
---
name: Build Container Images

on:
  push:
    branches:
      - main

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

  merge_group:

  workflow_dispatch:
    inputs:
      container:
        required: true
        description: The container to push to the registry
        type: choice
        options:
          - typos
          - committed

permissions:
  contents: read # for actions/checkout
  packages: write # for docker/bake-action

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.container }}
  cancel-in-progress: true

jobs:
  containers:
    runs-on: ubuntu-24.04
    name: ${{ matrix.name }} ${{ matrix.version}}
    strategy:
      matrix:
        include:
          - name: typos
            # renovate: datasource=github-releases depName=crate-ci/typos
            version: v1.26.1
            revision: 963c545f6b32b8572104c43605e663e84adbb9fb
            image: ghcr.io/${{ github.repository_owner }}/containers/typos
            annotations: |
              org.opencontainers.image.description=Source code spell checker
              org.opencontainers.image.source=https://github.com/crate-ci/typos
              org.opencontainers.image.licenses=Apache-2.0 OR MIT
          # TODO(PigeonF): Switch datasource, depName, and version on next committed release
          - name: committed
            # renovate: datasource=git-refs depName=PigeonF/committed
            version: PigeonF/push-tptvuxlroxqm
            revision: bf4c100365ff04fcdfa5ba817fd58f4e79a97720
            image: ghcr.io/${{ github.repository_owner }}/containers/committed
            annotations: |
              org.opencontainers.image.description=Nitpicking commit history since beabf39
              org.opencontainers.image.source=https://github.com/crate-ci/committed
              org.opencontainers.image.licenses=Apache-2.0 OR MIT
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate docker metadata
        id: docker-metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
        with:
          images: ${{ matrix.image }}
          tags: |
            # TODO(PigeonF): Remove once committed uses a released version
            type=edge,enable=${{ matrix.name == 'committed' }}
            type=ref,event=pr
            type=semver,pattern={{major}},value=${{ matrix.version }},enable=${{ github.event_name == 'workflow_dispatch' && !startsWith(steps.bake.version, '0.') }}
            type=semver,pattern={{major}}.{{minor}},value=${{ matrix.version }},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ matrix.version }},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=semver,pattern={{version}},value=${{ matrix.version }},enable=${{ github.event_name == 'workflow_dispatch' }}
          annotations: |
            org.opencontainers.image.title=${{ matrix.name }}
            org.opencontainers.image.revision=${{ matrix.revision }}
            ${{ matrix.annotations }}
          bake-target: _docker-metadata-action
      - name: Build the ${{ matrix.name }} container
        uses: docker/bake-action@2e3d19baedb14545e5d41222653874f25d5b4dfb # v5.10.0
        with:
          push: ${{ github.event_name == 'workflow_dispatch' && inputs.container == matrix.name }}
          files: |
            ./docker-bake.hcl
            ${{ steps.docker-metadata.outputs.bake-file-annotations }}
            ${{ steps.docker-metadata.outputs.bake-file-tags }}
          targets: ${{ matrix.name }}
          set: |
            *.cache-from=type=gha,scope=${{ matrix.name }}
            *.cache-to=type=gha,scope=${{ matrix.name }},mode=max
